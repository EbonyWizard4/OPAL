PLANO DO BOT-SINAIS. OPAL'S

24/02/2022
|-> Limpeza de codigo:
    |-> Codificação repetida no arquivo 'opal.py'
|-> Adaptação da tela login:
    |-> Problemas:
        |-> 4. Implementar navegação e limpeza de campo.
        |-> 5. Implementar Logo
        |-> 6. Implementar validação pela tecla Enter
        |-> 7. Desativar função sair do app pela Tecla Esc
        |-> 8. Implementar verificação de campo vazio
    |-> Soluções

|-> Adaptação da tela de sinais.
    |-> Problemas
        |-> 5. ao salvar o um sinal os campos devem ser limpos
        |-> 6. ao inserir valores não numericos no campo hora o codigo quebra

    |-> Soluções:
        |-> 6. 
            |-> 6.1 desativar a escuta do teclado alfa, mantendo apenas o numérico.
            |-> 6.2 exbir pop_up com slide_bar para selecionar valor.

|-> Adaptação da tela 'StartTrade':
    |-> Problemas:
        |-> 3. implementar metodo 'start_trade()'
        |-> 6. Implementar alteração de texto do botão Start/Stop
        |-> 7. Implementar modificação no arquivo 'botSinais.py' com as funções de entrada.
        |-> 8. Implementar funcionalidades da seção Resultados
        |-> 9. Implementar funcionalidades da seção Próximo Trade
    |-> Soluções:
            |-> 2.3 Implementar metodo que exclui o agendamento do evento
        |-> 3:
            |-> 3.1 implementar abertura de ordens com os dados constantes nos sinais do arquivo sinais.json.
        |->7:
|->            |-> 7.6 Implementado metodo 'OPAL().le_sinais()' no metodo start
|->            |-> 7.7 Implementado ordenação e conversão de valores dos sinais para datetime
|->            |-> 7.8 Implementado calculo de diferença em segundos para o proximo lance agendado
|->            |-> 7.9 Implementado execuçao agendada com uso do 'Clock.schedule_once()'

